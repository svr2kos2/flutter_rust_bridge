"use strict";(self.webpackChunkflutter_rust_bridge=self.webpackChunkflutter_rust_bridge||[]).push([[4319],{15680:(e,r,t)=>{t.d(r,{xA:()=>s,yg:()=>f});var n=t(96540);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=n.createContext({}),c=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},s=function(e){var r=c(e.components);return n.createElement(u.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},y=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),y=c(t),f=a,b=y["".concat(u,".").concat(f)]||y[f]||p[f]||i;return t?n.createElement(b,l(l({ref:r},s),{},{components:t})):n.createElement(b,l({ref:r},s))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=y;var o={};for(var u in r)hasOwnProperty.call(r,u)&&(o[u]=r[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=t[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}y.displayName="MDXCreateElement"},83473:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var n=t(58168),a=(t(96540),t(15680));const i={},l="Creating a Dart/Flutter library with binary release",o={unversionedId:"manual/integrate/library/index",id:"manual/integrate/library/index",title:"Creating a Dart/Flutter library with binary release",description:"In this chapter, we discuss how to add flutterrustbridge (FRB)",source:"@site/docs/manual/integrate/07-library/index.md",sourceDirName:"manual/integrate/07-library",slug:"/manual/integrate/library/",permalink:"/flutter_rust_bridge/manual/integrate/library/",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_rust_bridge/tree/master/website/docs/manual/integrate/07-library/index.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Wrapping up",permalink:"/flutter_rust_bridge/manual/integrate/existing/finish"},next:{title:"Overview",permalink:"/flutter_rust_bridge/manual/integrate/library/overview/"}},u={},c=[],s={toc:c};function p(e){let{components:r,...t}=e;return(0,a.yg)("wrapper",(0,n.A)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"creating-a-dartflutter-library-with-binary-release"},"Creating a Dart/Flutter library with binary release"),(0,a.yg)("p",null,"In this chapter, we discuss how to add ",(0,a.yg)("inlineCode",{parentName:"p"},"flutter_rust_bridge")," (FRB)\nto an already existing application or create a new application from scratch;\nthis section covers creating a Dart-only library with a Flutter wrapper library on top."),(0,a.yg)("p",null,"In many cases, following this guide is actually easier long-term than creating\nan application around FRB directly, but it does have a bit of overhead to set up.\nThis is also true when only using a library internally, because this guide will\nalso help you get set up with Melos, a monorepo tool specifically built for Dart/Flutter."))}p.isMDXComponent=!0}}]);